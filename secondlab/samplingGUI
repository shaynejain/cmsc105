package secondLab;

import java.util.InputMismatchException;
import java.util.Scanner;
import minisp.finalMenu;


	public class samplingGUI extends javax.swing.JFrame {

	  
		private static final long serialVersionUID = 1L;
		
	    public samplingGUI() {
	        initComponents();
	    }

	    private void initComponents() {

	        jPanel1 = new javax.swing.JPanel();
	        jLabel1 = new javax.swing.JLabel();
	        jButton1 = new javax.swing.JButton();
	        jButton2 = new javax.swing.JButton();
	        jButton3 = new javax.swing.JButton();

	        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
	        setTitle("Data Organization and Presentation");

	        jPanel1.setBackground(new java.awt.Color(255, 204, 102));
	        jPanel1.setMinimumSize(new java.awt.Dimension(800, 600));
	        jPanel1.setLayout(null);

	        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 30)); // NOI18N
	        jLabel1.setText("DATA ORGANIZATION & PRESENTATION");
	        jPanel1.add(jLabel1);
	        jLabel1.setBounds(100, 30, 610, 80);

	        jButton1.setBackground(new java.awt.Color(255, 102, 0));
	        jButton1.setFont(new java.awt.Font("SansSerif", 1, 25)); // NOI18N
	        jButton1.setText("Categorical");
	        jButton1.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                jButton1ActionPerformed(evt);
	            }
	        });
	        jPanel1.add(jButton1);
	        jButton1.setBounds(260, 180, 240, 50);

	        jButton2.setBackground(new java.awt.Color(255, 102, 0));
	        jButton2.setFont(new java.awt.Font("SansSerif", 1, 25)); // NOI18N
	        jButton2.setText("Numerical");
	        jButton2.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                jButton2ActionPerformed(evt);
	            }
	        });
	        jPanel1.add(jButton2);
	        jButton2.setBounds(260, 300, 240, 50);

	        jButton3.setBackground(new java.awt.Color(255, 102, 0));
	        jButton3.setFont(new java.awt.Font("SansSerif", 1, 25)); // NOI18N
	        jButton3.setText("Quit");
	        jButton3.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                jButton3ActionPerformed(evt);
	            }
	        });
	        jPanel1.add(jButton3);
	        jButton3.setBounds(260, 430, 240, 50);

	        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
	        getContentPane().setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	        );

	        pack();
	    }// </editor-fold>//GEN-END:initComponents

	    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
	        // TODO add your handling code here:
	        new Menu().setVisible(true);
	        this.setVisible(false);
	    }//GEN-LAST:event_jButton3ActionPerformed

	    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	        // TODO add your handling code here:
	        
	        this.setVisible(false);
	        
	        
	        Scanner input = new Scanner(System.in);
			
	        DataSampling sample = new DataSampling();

	        int choice = -1;
	        int size =  -1;
	        int label = -1;
	        int intNum = -1;
	        int repeat = 0;
	        float floatNum = -1;

	        String desc = "";
	        String strCat = "";
			
				
				
					System.out.println();
					System.out.println("********************************");
					System.out.println("Enter a brief description about the data.");
					desc = input.nextLine();
					
					do {
						System.out.println();
						System.out.println("********************************");
						System.out.println("Enter the number of data.");
						try {
							size = Integer.parseInt(input.nextLine());
							break;
						} catch(NumberFormatException e) {
							size = -1;
							System.out.println("Invalid input! Please try again.");
						}
					} while(size < 1);
				

					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("******* CATEGORICAL DATA *******");
					System.out.println("********************************");
					System.out.println();
					System.out.println("[1] NUMERIC Label");
					System.out.println("[2] ALPHABETIC Label");
					System.out.println("[3] STRING Label");
					System.out.println("********************************");
					do {
						System.out.println();
						System.out.println("********************************");
						System.out.println("Choose the data label you want.");
						try {
							label = input.nextInt();
						} catch(InputMismatchException e) {
							label = -1;
							System.out.println("Invalid input! Please try again.");
						}
						input.nextLine();
					} while(label < 1 || label > 3);
					
				
				
				sample = new DataSampling(label, desc);
				
				if(label == 1) {
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("CATEGORICAL DATA: Numeric Label");
					for(int i = 0; i < size; i++) {
						System.out.println();
						System.out.println("Sample " + (i + 1) + ": ");
						do {
							try {
								strCat = input.next();
								if(sample.isNumeric(strCat) == false) {
									throw new Exception();
								}
							} catch(Exception e) {
								System.out.println("Invalid input! Please try again.");
								strCat = "";
							}
							input.nextLine();
						} while(strCat == "");
						sample.list.add(strCat);
					}
				}
				else
				if(label == 2) {
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("*** CATEGORICAL DATA: Alphabetic Label ***");
					for(int i = 0; i < size; i++) {
						System.out.println();
						System.out.println("Sample " + (i + 1) + ": ");
						do {
							try {
								strCat = input.next();
								if(sample.isAlphabetic(strCat) == false) {
									throw new Exception();
								}
							} catch(Exception e) {
								System.out.println("Invalid input! Please try again.");
								strCat = "";
							}
							input.nextLine();
						} while(strCat == "");
						sample.list.add(strCat);
					}
				}
				else
				if(label == 3) {
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("*** CATEGORICAL DATA: String Label ***");
					for(int i = 0; i < size; i++) {
						System.out.println();
						System.out.println("Sample " + (i + 1) + ": ");
						do {
							try {
								strCat = input.next();
							} catch(Exception e) {
								System.out.println("Invalid input! Please try again.");
								strCat = "";
							}
							input.nextLine();
						} while(strCat == "");
						sample.list.add(strCat);
					}
				}
	        sample.display();
				
	        System.out.println("\n\n");
	        System.out.println("Press ENTER to continue...");
	      input.nextLine();
	      try{
	        Thread.sleep(2000);
	      } catch(InterruptedException e) {
	        Thread.currentThread().interrupt();
	      }
	      
	      do {
					
						sample.displaySummaryTable();
					
					
						int choice3 = -1;
						System.out.println("\n\n");
						System.out.println("********************************");
						System.out.println("Do you want to display the graph for the table?");
						System.out.println("[1] YES");
						System.out.println("[2] NO");
						do {
							System.out.println();
							try {
								choice3 = input.nextInt();
								if(choice3 == 1) {
	                                                                
									sample.displayGraph();
								}
							} catch(InputMismatchException e) {
								choice3 = -1;
								System.out.println("Invalid input! Please try again.");
							}
							input.nextLine();
						} while(choice3 < 1 || choice3 > 2);
					
					
					int choice4 = -1;
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("Do you want to display the table again? > ");
					System.out.println("[1] YES");
					System.out.println("[2] NO");	
					do {
						System.out.println();
						try {
							choice4 = input.nextInt();
						} catch(InputMismatchException e) {
							choice4 = -1;
							System.out.println("Invalid input! Please try again.");
						}
						input.nextLine();
					} while(choice4 < 1 || choice4 > 2);
					
					if(choice4 == 2) {
						repeat = 1;
	                                        this.setVisible(false);
	                                        new DataOrgGUI().setVisible(true);
					}
					else {
						repeat = 0;
					}
				} while(repeat == 0);
	      
	      System.out.println("\n\n\n\n\n");
	    }//GEN-LAST:event_jButton1ActionPerformed

	    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
	        // TODO add your handling code here:
	        
	        this.setVisible(false);
	        
	        Scanner input = new Scanner(System.in);
			
			DataSampling sample = new DataSampling();
			
			int choice = -1;
			int size =  -1;
			int label = -1;
			int intNum = -1;
			int repeat = 0;
			float floatNum = -1;
			
			String desc = "";
			String strCat = "";
						
					System.out.println();
					System.out.println("********************************");
					System.out.println("Enter a brief description about the data.");
					desc = input.nextLine();
					
					do {
						System.out.println();
						System.out.println("********************************");
						System.out.println("Enter the number of data.");
						try {
							size = Integer.parseInt(input.nextLine());
							break;
						} catch(NumberFormatException e) {
							size = -1;
							System.out.println("Invalid input! Please try again.");
						}
					} while(size < 1);
				
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("******** NUMERICAL DATA ********");
					System.out.println("********************************");
					System.out.println();
					System.out.println("[4] INTEGER Label");
					System.out.println("[5] FLOAT Label");
					System.out.println("********************************");
					do {
						System.out.println();
						System.out.println("********************************");
						System.out.println("Choose the data label you want.");
						try {
							label = input.nextInt();
						} catch(InputMismatchException e) {
							label = -1;
							System.out.println("Invalid input! Please try again.");
						}
						input.nextLine();
					}while(label < 4 || label > 5);
					
					
				
				sample = new DataSampling(label, desc);
				
				
				if(label == 4) {
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("*** NUMERICAL DATA: Integer Label");
					for(int i = 0; i < size; i++) {
						System.out.println();
						System.out.println("Sample " + (i + 1) + ": ");
						do {
							try {
								intNum = input.nextInt();
							} catch(InputMismatchException e) {
								intNum = -1;
								System.out.println("Invalid input! Please try again.");
							}
							input.nextLine();
						} while(intNum < 1);
						sample.list.add(intNum);
					}
				}
				else 
				if(label == 5) {
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("*** NUMERICAL DATA: Float Label");
					for(int i = 0; i < size; i++) {
						System.out.println();
						System.out.println("Sample " + (i + 1) + ": ");
						do {
							try {
								floatNum = input.nextFloat();
							} catch(InputMismatchException e) {
								floatNum = -1;
								System.out.println("Invalid input! Please try again.");
							}
							input.nextLine();
						} while(floatNum < 1);
						sample.list.add(floatNum);
					}
				}
				
				sample.display();
				
				System.out.println("\n\n");
				System.out.println("Press ENTER to continue...");
	      input.nextLine();
	      try{
	        Thread.sleep(2000);
	      } catch(InterruptedException e) {
	        Thread.currentThread().interrupt();
	      }
	      
	      do {			
					if(label == 4) {
						int choice1 = -1;
						sample.displayIntFDT(choice1);
						System.out.println("\n\n");
						System.out.println("********************************");
						System.out.println("********* CLASS LIMITS *********");
						System.out.println();
						System.out.println("[1] FIRST");
						System.out.println("[2] LAST");
						System.out.println("[3] BOTH");
						System.out.println("********************************");
						do {
							System.out.println();
							System.out.println("What class limit/s do you want to collapse?");	
							try {
								choice1 = input.nextInt();
							} catch(InputMismatchException e) {
								choice1 = -1;
								System.out.println("Invalid input! Please try again.");
							}
							input.nextLine();
						} while(choice1 < 1 || choice1 > 3);
						sample.displayIntFDT(choice1);
					}
					
					if(label == 5) {
						int choice2 = -1;
						sample.displayFloatFDT(choice2);
						System.out.println("\n\n");
						System.out.println("********************************");
						System.out.println("********* CLASS LIMITS *********");
						System.out.println();
						System.out.println("[1] FIRST");
						System.out.println("[2] LAST");
						System.out.println("[3] BOTH");
						System.out.println("********************************");
						do {
							System.out.println();
							System.out.println("What class limit/s do you want to collapse? > ");
							try {
								choice2 = input.nextInt();
							} catch(InputMismatchException e) {
								choice2 = -1;
								System.out.println("Invalid input! Please try again.");
							}
							input.nextLine();
						} while(choice2 < 1 || choice2 > 3);
						sample.displayFloatFDT(choice2);
					}
					
					
					int choice4 = -1;
					System.out.println("\n\n");
					System.out.println("********************************");
					System.out.println("Do you want to display the table again? > ");
					System.out.println("[1] YES");
					System.out.println("[2] NO");	
					do {
						System.out.println();
						try {
							choice4 = input.nextInt();
						} catch(InputMismatchException e) {
							choice4 = -1;
							System.out.println("Invalid input! Please try again.");
						}
						input.nextLine();
					} while(choice4 < 1 || choice4 > 2);
					
					if(choice4 == 2) {
						repeat = 1;
	                                        this.setVisible(false);
	                                        new samplingGUI().setVisible(true);
					}
					else {
						repeat = 0;
					}
				} while(repeat == 0);
	      
	      System.out.println("\n\n\n\n\n");
	    }//GEN-LAST:event_jButton2ActionPerformed

	    /**
	     * @param args the command line arguments
	     */
	    public static void main(String args[]) {
	        /* Set the Nimbus look and feel */
	        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	         */
	        try {
	            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
	                if ("Nimbus".equals(info.getName())) {
	                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
	                    break;
	                }
	            }
	        } catch (ClassNotFoundException ex) {
	            java.util.logging.Logger.getLogger(DataOrgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        } catch (InstantiationException ex) {
	            java.util.logging.Logger.getLogger(DataOrgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        } catch (IllegalAccessException ex) {
	            java.util.logging.Logger.getLogger(DataOrgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
	            java.util.logging.Logger.getLogger(DataOrgGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        }
	        //</editor-fold>

	        /* Create and display the form */
	        java.awt.EventQueue.invokeLater(new Runnable() {
	            public void run() {
	                new samplingGUI().setVisible(true);
	            }
	        });
	    }

	    // Variables declaration - do not modify//GEN-BEGIN:variables
	    private javax.swing.JButton jButton1;
	    private javax.swing.JButton jButton2;
	    private javax.swing.JButton jButton3;
	    private javax.swing.JLabel jLabel1;
	    private javax.swing.JPanel jPanel1;
	    // End of variables declaration//GEN-END:variables
	}
