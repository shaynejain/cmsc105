package firstLab;

import java.util.InputMismatchException;
import java.util.Scanner;
;

public class JainRumagueraLab1 {

	private static Scanner input = new Scanner(System.in);
		
		public static void simulate() {
			simpleSampling sample = new simpleSampling();
			
			int simpleChoice = -1;
			int population_size = -1;
			int data_type = -1;
			int size_choice = -1;
			int sample_size = -1;
			int percent = -1;
			int repeat = 0;
			
			
			int[] numList;
			char[] charList;
			
			do {
				System.out.println();
				System.out.println("--------------------------");
				System.out.println("| BASIC SAMPLING METHODS  |");
				System.out.println("--------------------------");
				System.out.println();
				System.out.println("1. Simple Random");
				System.out.println("2. Systematic");
				System.out.println("3. Stratified");
				System.out.println("4. Quit");
				
				do {
					System.out.println();
					System.out.println("Please choose a sampling method: ");
					try {
						simpleChoice = input.nextInt();
					} catch(InputMismatchException e) {
						simpleChoice = -1;
						System.out.println("You entered an invalid input! Please try again: ");
					}
					input.nextLine();
				} while(simpleChoice < 1 || simpleChoice > 4);
				
				System.out.println();
				if(simpleChoice >= 1 && simpleChoice <= 3) {
					do {
						System.out.println();
						System.out.println("Please enter the population size. > ");
						try {
							population_size = Integer.parseInt(input.nextLine());
							break;
						} catch(NumberFormatException e) {
							population_size = -1;
							System.out.println("You entered an invalid input! Please try again: ");
						}
					} while(population_size < 1);
					
					System.out.println();
					do {
						System.out.println();
						System.out.println("Please enter the data type: ");
		        System.out.println("1. Numerical");
		        System.out.println("2. Character");
		        try {
		        	data_type = input.nextInt();
		        } catch(InputMismatchException e) {
		        	data_type = -1;
					System.out.println("You entered an invalid input! Please try again: ");
		        }
		        input.nextLine();
					} while(data_type < 1 || data_type > 2);
					
					if(data_type == 1) {
		        sample = new simpleSampling(1);
		      } else
		        if(data_type == 2) {
		        sample = new simpleSampling(2);
		      }
		      
		      numList = new int[population_size];
		      charList = new char[population_size];
					
					if(data_type == 1) {
		        for(int ctr = 0; ctr < population_size; ctr++) {
		        	System.out.println();
		          System.out.println("Sample " + (ctr + 1) + ": ");
		          
		          do{
		            try{
		              numList[ctr] = input.nextInt();
		            }catch(InputMismatchException e) {
		            	numList[ctr] = -1;
						System.out.println("You entered an invalid input! Please try again: ");
		            }
		            input.nextLine();
		          }while(numList[ctr] < 1);
		        }
		        
		        sample.Sampling(numList, population_size);
		      } else 
		        if(data_type == 2) {
		        for(int ctr = 0; ctr < population_size; ctr++) {
		          System.out.println("Sample " + (ctr + 1) + ": ");
		          
		          do{
		            try{
		              charList[ctr] = input.next().charAt(0);     
		              if(charList[ctr] >= '0' && charList[ctr] <= '9')
		                throw new Exception();
		            }catch(Exception e) {
						System.out.println("You entered an invalid input! Please try again: ");
		            }
		            
		            input.nextLine();
		          }while(charList[ctr] >= '0' && charList[ctr] <= '9');
		        }
		        sample.Sampling(charList, population_size);
		      }
		      sample.display();
					
		      System.out.println("\n\n");
					System.out.println("Press ENTER to continue...");
	        input.nextLine();
	        try{
	          Thread.sleep(2000);
	        } catch(InterruptedException e) {
	          Thread.currentThread().interrupt();
	        }
				}
				
				switch(simpleChoice) {
				case 1:
					do {
						System.out.println("\n\n");
						System.out.println("--------------------------");
						System.out.println("| SIMPLE RANDOM SAMPLING  |");
						System.out.println("--------------------------");
						do {
							System.out.println();
							System.out.println("Do you want to enter a sample size?");
							System.out.println("1. Yes");
							System.out.println("2.  NO");
							try {
								size_choice = input.nextInt();
							} catch(InputMismatchException e) {
								size_choice = -1;
								System.out.println("You entered an invalid input! Please try again: ");
							}
							input.nextLine();
						} while(size_choice < 1 || size_choice > 2);
						
						if(size_choice == 1) {
							do {
								System.out.println();
								System.out.println("Please enter the sample size");
								try {
									sample_size = Integer.parseInt(input.nextLine());
									break;
								} catch(NumberFormatException e) {
									sample_size = -1;
									System.out.println("You entered an invalid input! Please try again: ");
								}
								input.nextLine();
							} while(sample_size < population_size && sample_size < 1);
						}
						else {
							sample_size = (int) Math.ceil(population_size * 0.20);
						}
						
						sample.SimpleRandom(sample_size);
						
						int choice4 = -1;
	          
	          do {
	          	System.out.println("\n\n");
	            System.out.println("Do you want to display again the simualation?");
	            System.out.println("1. Yes");
	            System.out.println("2. No");
		          try {
		              choice4 = input.nextInt();
		          } catch(InputMismatchException e) {
						System.out.println("You entered an invalid input! Please try again: ");
		          }
		          input.nextLine();
	          } while(choice4 < 1 || choice4 > 2);

	          if(choice4 == 2) {
	            repeat = 1;
	          }
	          else {
	            repeat = 0;
	          }			
					} while(repeat == 0);
					
					System.out.println("\n\n");
					break;
					
				case 2:
					do {
						System.out.println("\n\n");
						System.out.println("----------------------");
						System.out.println("|SYSTEMATIC SAMPLING  |");
						System.out.println("----------------------");
						do {
							System.out.println();
							System.out.println("Do you want to input sample size?");
							System.out.println("[1] YES");
							System.out.println("[2] NO");
							try {
								size_choice = input.nextInt();
							} catch(InputMismatchException e) {
								size_choice = -1;
								System.out.println("You entered an invalid input! Please try again: ");
							}
							input.nextLine();
						} while(size_choice < 1 || size_choice > 2);
						
						if(size_choice == 1) {
							do {
								System.out.println();
								System.out.println("Please enter the sample size");
								try {
									sample_size = Integer.parseInt(input.nextLine());
									break;
								} catch(NumberFormatException e) {
									sample_size = -1;
									System.out.println("You entered an invalid input! Please try again: ");
								}
								input.nextLine();
							} while(sample_size < population_size && sample_size < 1);
						}
						else {
							sample_size = (int) Math.ceil(population_size * 0.20);
						}
						
						sample.Systematic(sample_size);
						
						int choice4 = -1;
	          
	          do {
	          	System.out.println("\n\n");
	            System.out.println("Do you want to display the simualation again?");
	            System.out.println("1. Yes");
	            System.out.println("2. No");
		          try {
	              choice4 = input.nextInt();
		          } catch(InputMismatchException e) {
		          	choice4 = -1;
					System.out.println("You entered an invalid input! Please try again: ");
		          }
		          input.nextLine();
	          } while(choice4 < 1 || choice4 > 2);

	          if(choice4 == 2) {
	            repeat = 1;
	          }
	          else {
	            repeat = 0;
	          }			
					} while(repeat == 0);
					
					System.out.println("\n\n");
					break;
				
				case 3:
					do{
						System.out.println("\n\n");
						System.out.println("-----------------------");
						System.out.println("| STRATIFIED SAMPLING |");
						System.out.println("-----------------------");
						System.out.println();
						sample.segregate();
						System.out.println();
						do{
							System.out.println("");
							System.out.println("Please enter the sample percentage");
							try{
								percent = Integer.parseInt(input.nextLine());
								break;
							}catch(NumberFormatException e) {
								percent = -1;
								System.out.println("You entered an invalid input! Please try again: ");
							}
						}while(percent < 1 || percent > 100);
						
						System.out.println("\n\n");
						sample.Stratified(percent);
						
						int choice4 = -1;
	          
	          do {
	          	System.out.println("\n\n");
	            System.out.println("Do you want to display the simualation again?");
	            System.out.println("1. Yes");
	            System.out.println("2. No");
		          try {
		          	choice4 = input.nextInt();
		          } catch(InputMismatchException e) {
		          	choice4 = -1;
					System.out.println("You entered an invalid input! Please try again: ");
		          }
		          input.nextLine();
	          } while(choice4 < 1 || choice4 > 2);

	          if(choice4 == 2) {
	            repeat = 1;
	          }
	          else {
	            repeat = 0;
	          }
					}while(repeat == 0);
					
					System.out.println("\n\n");
					break;
					
				default:
					try{
						System.out.println("\n\n");
	          System.out.println("The Program will now terminate! ");
	          try{
	              Thread.sleep(2000);
	              System.exit(0);
	          } catch(InterruptedException e) {
	              Thread.currentThread().interrupt();
	          }       
					} catch(Exception e) {
						input.nextLine();
					}
					break;
				}
			} while(simpleChoice != 4);
		}

		public static void main(String[] args) {
			// TODO Auto-generated method stub
			simulate();
		}

	}
